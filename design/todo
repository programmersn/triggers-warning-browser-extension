- disable sharingan : return tiemoutID in CustomEvent for every segment injected. Store timeoutIDs in an array in contentScriptNetflixPlaybackController.js.

- Find a way to select the most relevant pair of timestamps (startTime, endTime) for a given segment, amongst all the slightly different pairs
that users might have collaboralitviely shared.

- Reinitialize the state of the popup to sharingan-available whenever the page reloads (to be done
probably in popup.js)

- Currently, getContentId() method is triggered in content script every time the popup opens. 
Improve that by fetching the contentId from contentMetadata so that subsequent calls to the method won't be needed.

- When a user submits a sensitive segment without indicating a sensitive category, displays an error message on popup-report-segment.html page

- Extract only the useful part in Netflix URLS lying before '?trackId' token, and only make use of that part across the whole codebase 
for simplicity and uniformity sake

- Inject a newly reported graphic segment into the playback locally.

- If sharingan is already enabled, when options are set or updated, inject segments pertaining to the new categories user set.

- Seems like subtitleFetcher script is having hard times when VPN is activated

- contentScriptNEtflixPlaybackController sometimes inject embedded code before netflix page has fully loaded, resulting in 'player' and 
'videoPlayer' vars not being defined. 
Ex: prepareSharingan() when the user opens the popup before the playback page has loaded, resulting in the contentId.js embedded code
failing to execute as Netflix's vars are not defined yet, causing contentId not being retrieved, which jeopardizes the execution of any
subsequent action.

- Add features in reporting graphic scenes whereby user can add extra informations about the nature of the segment he's reporting

- Check user provided timestamps against video duration

- Consider purging un-needed permissions :
Is webNavigation permission still needed ? 
Is host permission needed with declarativeNetRequest ? No